# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LoginScreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import QLabel, QDesktopWidget
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from SignupScreen import *
from resetpassword import *
from ualreadyexist import *
from Mainscreen import QLabelClickable
from Mainscreen import Ui_MainWindow
import source
import sys
import sqlite3
#from question import MainApp




#class LoginWindow(QMainWindow):
#    def __init__(self):
#        QMainWindow.__init__(self)
#        self.ui = Ui_LoginScreen()
#        self.ui.setupUi(self)
#        self.ui.pushButton1.clicked.connect(self.opensignup)


    #def opensignup(self):
    #    self.close()
    #    self.window = QtWidgets.QMainWindow()
    #    self.ui = Ui_SignupScreen()
    #    self.ui.setupUi(self.window)
    #    self.window.show()

#class QLabelClickable(QtWidgets.QLabel):
#    clicked = pyqtSignal()

#    def __init__(self, parent=None):
        #super(QLabelClickable, self).__init__(parent)
#        QtWidgets.QLabel.__init__(self, parent)

    #def mousePressEvent(self, event):
        #self.ultimo = "Click"

#    def mouseReleaseEvent(self, QMouseEvent):
#        if QMouseEvent.button() == Qt.LeftButton:
#            self.clicked.emit()

    #def mouseReleaseEvent(self, event):
        #if self.ultimo == "Click":
            #QTimer.singleShot(QApplication.instance().doubleClickInterval(), self.performSingleClickAction)
        #else:
            # Realizar acci√≥n de doble clic.
            #self.clicked.emit(self.ultimo)

    #def mouseDoubleClickEvent(self, event):
    #    self.ultimo = "Double Click"


    #def performSingleClickAction(self):
    #    if self.ultimo == "Click":
    #        self.clicked.emit(self.ultimo)


######################################## Login class
class Ui_LoginScreen(object):

    #def __init__(self):
        #""" init things here """
        #super().__init__()
    def setupUi(self, LoginScreen):
    #try:
        LoginScreen.setObjectName("LoginScreen")
    #except Exception as e:
    #    print(e)
        LoginScreen.resize(1200, 800)
        LoginScreen.setWindowFlag(QtCore.Qt.FramelessWindowHint)
        LoginScreen.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        LoginScreen.setGeometry(350, 120, 900, 600)
        self.centralwidget = QtWidgets.QWidget(LoginScreen)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 10, 665, 465))
        self.widget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(380, 80, 151, 31))
        self.label.setStyleSheet("font: 15pt \"Arial\";")
        self.label.setObjectName("label")


        self.email = QtWidgets.QLineEdit(self.widget)
        self.email.setGeometry(QtCore.QRect(340, 160, 211, 31))
        self.email.setStyleSheet("background-color: rgba(60,60, 60, 0);\n"
"border:2px solid rgba(60, 60, 60, 0);\n"
"border-bottom-color: rgba(46, 82, 101, 200);\n"
"color: rgb(60, 60, 60);\n"
"padding-bottom:7px;")
        self.email.setObjectName("lineEdit")
        self.password = QtWidgets.QLineEdit(self.widget)
        self.password.setGeometry(QtCore.QRect(340, 220, 211, 31))
        self.password.setStyleSheet("background-color: rgba(60,60, 60, 0);\n"
"border:2px solid rgba(60, 60, 60, 0);\n"
"border-bottom-color: rgba(46, 82, 101, 200);\n"
"color: rgb(60, 60, 60);\n"
"padding-bottom:7px;")
        self.password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(370, 300, 161, 31))
        self.pushButton.setStyleSheet("QPushButton#pushButton{\n"
"  background-color: rgb(2, 114, 118);\n"
"  font: 10pt \"Arial\";\n"
"  color: rgba(255, 255, 255, 200);\n"
"  border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton#pushButton:pressed{\n"
"  padding-left:5px;\n"
"  padding-top:5px;\n"
"  background-color:rgba(255, 107, 107, 255);\n"
"  background-position:calc(100% . 10px)center;\n"
"}\n"
"\n"
"QPushButton#pushButton:hover{\n"
"  background-color: rgba(255, 255, 255, 255);\n"
"  color:rgb(2, 114, 118);\n"
"  border:2px solid;\n"
"  border-color:rgb(2, 114, 118);\n"
"}\n"
"\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.loginfunction)
        #self.pushButton.clicked.connect(lambda : createdb())
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(50, 80, 231, 261))
        self.label_2.setStyleSheet("image: url(:/newPrefix/man.png);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setGeometry(QtCore.QRect(60, 100, 71, 31))
        self.label_3.setStyleSheet("color: rgb(79, 145, 143, 140);\n"
"font: 26pt \"MV Boli\";")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setGeometry(QtCore.QRect(200, 40, 71, 31))
        self.label_4.setStyleSheet("color: rgb(74, 147, 145, 170);\n"
"font: 26pt \"MV Boli\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setGeometry(QtCore.QRect(40, 180, 31, 31))
        self.label_5.setStyleSheet("font: italic 26pt \"Californian FB\";\n"
"color: rgb(73, 147, 145, 130);")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(120, 40, 71, 31))
        self.label_6.setStyleSheet("color: rgb(78, 145, 143, 180);\n"
"font: 26pt \"MV Boli\";")
        self.label_6.setObjectName("label_6")


        self.pushButton1 = QtWidgets.QPushButton(self.widget)
        #self.pushButton1 = QLabelClickable(self.widget)
        self.pushButton1.setGeometry(QtCore.QRect(450, 360, 141, 16))
        self.pushButton1.setStyleSheet("font: 10pt \"Arial\";")
        self.pushButton1.setObjectName("pushButton1")

        self.pushButton2 = QtWidgets.QPushButton(self.widget)
        #self.pushButton1 = QLabelClickable(self.widget)
        self.pushButton2.setGeometry(QtCore.QRect(320, 360, 141, 16))
        self.pushButton2.setStyleSheet("font: 10pt \"Arial\";")
        self.pushButton2.setObjectName("pushButton1")




        LoginScreen.setCentralWidget(self.centralwidget)

        self.retranslateUi(LoginScreen)
        QtCore.QMetaObject.connectSlotsByName(LoginScreen)
        self.pushButton1.clicked.connect(self.opensignup)
        self.pushButton1.clicked.connect(LoginScreen.close)

        self.pushButton2.clicked.connect(self.openforget)




    #def opensignupscreen(self):

    #    self.opensignup()
    #    LoginScreen.hide()
    #    login = LoginWindow()
        #widget.addWidget(login)
        #widget.setCurrentIndex(widget.currentIndex()+1)
        #self.main = LoginWindow()
        #self.main.show()
        #self.close()



    def loginfunction(self):
        email = self.email.text()
        password = self.password.text()
        conn = sqlite3.connect("Database.db")
        cur = conn.cursor()

        #print(cur.execute("SELECT * FROM login"))
        #result_pass = cur.fetchall()
        #print(result_pass)
        statement = f"SELECT Email FROM user WHERE Email='{email}' AND Password = '{password}';"
        cur.execute(statement)
        if not cur.fetchone():
            self.Dialog = QtWidgets.QDialog()
            self.ui = Ui_Email()
            self.ui.setupUi(self.Dialog)
            self.ui.label.setText("Email or Password is invalid")

            self.Dialog.show()
        else:
            try:
                statement = f"SELECT Fulname FROM user WHERE Email ='{email}' AND Password = '{password}';"
                cur.execute(statement)
                name = cur.fetchone()
                nam = name[0]
                conn.commit()
                conn.close()
                #LoginScreen.close()
                self.window = QtWidgets.QMainWindow()
                self.ui = Ui_MainWindow()
                self.ui.setupUi(self.window)
                self.ui.mail.setText(email)
                self.ui.name.setText(nam)
                self.window.show()
            except Exception as e:
                print(e)




        #for x, y in enumerate(result_pass):
        #    if y[0] == email and y[1] == password:
        #        LoginScreen.close()
        #        self.window = QtWidgets.QMainWindow()
        #        self.ui = Ui_MainWindow()
        #        self.ui.setupUi(self.window)
        #        self.window.show()
        #        print("Successfully logged in")
        #    elif y[0] != email and y[1] != password:
        #        print("Invalid username or password")

    def opensignup(self):
        try:
            self.SignupScreen = QtWidgets.QMainWindow()
            self.ui = Ui_SignupScreen()
            self.ui.setupUi(self.SignupScreen)
            self.SignupScreen.show()
        except Exception as e:
            print(e)

    def openforget(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Reset()
        self.ui.setupUi(self.window)
        self.window.show()



    def retranslateUi(self, LoginScreen):
        _translate = QtCore.QCoreApplication.translate
        LoginScreen.setWindowTitle(_translate("LoginScreen", "LoginScreen"))
        self.label.setText(_translate("LoginScreen", "Member Log In"))
        self.email.setPlaceholderText(_translate("LoginScreen", "Email"))
        self.password.setPlaceholderText(_translate("LoginScreen", "Password"))
        self.pushButton.setText(_translate("LoginScreen", "Log In"))
        self.label_3.setText(_translate("LoginScreen", "‚àë"))
        self.label_4.setText(_translate("LoginScreen", "·ø®"))
        self.label_5.setText(_translate("LoginScreen", "‚Ñ¶"))
        self.label_6.setText(_translate("LoginScreen", "?"))
        self.pushButton1.setText(_translate("LoginScreen", "Sign Up"))
        self.pushButton2.setText(_translate("LoginScreen", "Forget Password?"))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    LoginScreen = QtWidgets.QMainWindow()
    ui = Ui_LoginScreen()
    ui.setupUi(LoginScreen)
    LoginScreen.show()
    #app = QtWidgets.QApplication(sys.argv)
    #LoginScreen = MainS()
    #LoginScreen.show()
    sys.exit(app.exec_())
